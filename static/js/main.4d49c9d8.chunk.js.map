{"version":3,"sources":["actions/actionTypes.js","actions/ActionCreators.js","components/ServiceAdd.js","components/ServiceList.js","App.js","reducers/serviceAddReducer.js","reducers/serviceListReducer.js","store/index.js","index.js"],"names":["ADD_SERVICE","REMOVE_SERVICE","CHANGE_SERVICE_FIELD","EDIT_SERVICE","CLEAR_SERVICE_FIELD","CANCEL_EDIT","clearServiceField","type","ServiceAdd","item","useSelector","state","serviceAdd","item2","serviceList","dispatch","useDispatch","onFieldChange","e","target","name","value","payload","changeServiceField","onReset","preventDefault","className","htmlFor","onChange","placeholder","price","trim","onClick","id","nanoid","addService","selected","ServiceList","onServiceRemove","removeService","onServiceEdit","edited","services","find","s","editService","length","map","service","App","initialState","reducer","combineReducers","filter","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4d49c9d8.chunk.js","sourcesContent":["export const ADD_SERVICE = 'ADD_SERVICE';\nexport const REMOVE_SERVICE = 'REMOVE_SERVICE';\nexport const CHANGE_SERVICE_FIELD = 'CHANGE_SERVICE_FIELD';\nexport const EDIT_SERVICE = 'EDIT_SERVICE';\nexport const CLEAR_SERVICE_FIELD = 'CLEAR_SERVICE_FIELD';\nexport const CANCEL_EDIT = 'CANCEL_EDIT';","import {nanoid} from 'nanoid';\nimport { \n  ADD_SERVICE,\n  REMOVE_SERVICE,\n  CHANGE_SERVICE_FIELD,\n  EDIT_SERVICE,\n  CLEAR_SERVICE_FIELD,\n  CANCEL_EDIT,\n} from './actionTypes';\n\nexport function addService(name, price, id = nanoid()) {\n  return {type: ADD_SERVICE, payload: { name, price, id }};\n}\n\nexport function removeService(id) {\n  return {type: REMOVE_SERVICE, payload: {id}};\n}\n\nexport function changeServiceField(name, value) {\n  return {type: CHANGE_SERVICE_FIELD, payload: {name, value}};\n}\n\nexport function editService(name, price, id) {\n  return {type: EDIT_SERVICE, payload: { name, price, id }};\n}\n\nexport function clearServiceField() {\n  return  {type: CLEAR_SERVICE_FIELD };\n}\n\nexport function cancelEdit() {\n  return  {type: CANCEL_EDIT };\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { \n  changeServiceField,\n  addService,\n  clearServiceField,\n  cancelEdit,\n} from '../actions/ActionCreators';\n\nexport default function ServiceAdd() {\n  const item = useSelector((state) => state.serviceAdd);\n  const item2 = useSelector((state) => state.serviceList);\n  const dispatch = useDispatch();\n\n  const onFieldChange = (e) => {\n    const { name, value } = e.target;\n    dispatch(changeServiceField(name, value)); \n  }\n\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addService(item.name, item.price));\n    dispatch(clearServiceField());\n  }\n\n  const onFormReset = (e) => {\n    e.preventDefault();\n    dispatch(clearServiceField());\n  }\n\n  const onEditCancel = (e) => {\n    dispatch(cancelEdit());\n    dispatch(clearServiceField());\n  }\n\n  return (\n    <form onReset={onFormReset}>\n      <div className='input_row'>\n        <label htmlFor=\"name\">Service:</label>\n        <input name=\"name\" \n          onChange={onFieldChange} \n          value={item.name}\n          placeholder='Service name'/>\n      </div>\n\n      <div className='input_row'>\n        <label htmlFor=\"price\">Price:</label>\n        <input name=\"price\"\n          type='number'\n          onChange={onFieldChange} \n          value={item.price}\n          placeholder='Service price'/>\n      </div>     \n\n      <div className=\"btn_row\">\n        <button type=\"submit\"\n          className={`form_btn${!item.name.trim() || !item.price.trim() ? ' inactive' : ' '}`}\n          onClick={onFormSubmit}>Save</button>\n        <button type=\"reset\"\n          className={`form_btn${!item.name.trim() || !item.price.trim() ? ' inactive' : ' '}`}\n          >Clear</button>\n\n        <button type=\"button\"\n          onClick={onEditCancel}\n          className={`form_btn${!item2.selected ? ' hidden' : ''}`}\n          >Cancel</button>\n      </div>\n    </form>\n  )\n}","import { useSelector, useDispatch } from 'react-redux';\nimport { \n  removeService,\n  editService,\n  clearServiceField,\n} from '../actions/ActionCreators';\n\nexport default function ServiceList() {\n  const item = useSelector((state) => state.serviceList);\n  const dispatch = useDispatch();\n\n  const onServiceRemove = (id) => {\n    dispatch(removeService(id));\n    if (id === item.selected) {\n      dispatch(clearServiceField());\n    }\n  }\n\n  const onServiceEdit = (id) => {\n    const edited = item.services.find((s) => s.id === id);\n    dispatch(editService(edited.name, \"\" + edited.price, id));\n  }\n\n  return (\n    <div className='list_container'>\n      <h3>Service List</h3>\n        {item.services.length === 0 ? 'Нет сервисов' :\n        item.services.map((service) => (\n          <div className='servise__list__row' key={service.id}>\n            <span className=\"row_name\">{service.name}</span>\n            <span className=\"row_price\">{service.price}</span>\n            <div className='btn_box'>\n              <button onClick={() => onServiceEdit(service.id)}>\n                <span className='material-icons'>edit</span>\n              </button>\n              <button onClick={() => onServiceRemove(service.id)}>\n                <span className='material-icons'>delete</span>\n              </button>\n            </div>            \n          </div>\n        ))}\n    </div>\n  )\n}","import './App.css';\n\nimport ServiceAdd from './components/ServiceAdd';\nimport ServiceList from './components/ServiceList';\n\nfunction App() {\n\n  return (\n    <>\n      <div className=\"task-title\">Sevice List</div>\n      <ServiceAdd />\n      <ServiceList />\n    </>\n  );\n}\n\nexport default App;\n","import { \n  CHANGE_SERVICE_FIELD,\n  CLEAR_SERVICE_FIELD,\n  EDIT_SERVICE,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  name: '',\n  price: '',\n};\n\nexport default function serviceAddReducer(state = initialState, { type, payload }) {\n  switch(type) {\n    case CHANGE_SERVICE_FIELD:\n      const { name, value } = payload;\n      return {...state, [name]: value};\n    \n    case CLEAR_SERVICE_FIELD:\n      return {...initialState};\n\n    case EDIT_SERVICE:\n      return {...state, name: payload.name, price: payload.price};\n    \n    default:\n      return state;\n  }\n}","import {nanoid} from 'nanoid';\nimport {\n  ADD_SERVICE,\n  REMOVE_SERVICE,\n  EDIT_SERVICE,\n  CANCEL_EDIT,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  selected: null,\n  services: [\n    { id: nanoid(), name: 'Замена стекла', price: 10000 },\n    { id: nanoid(), name: 'Установка ОС', price: 2000 },\n  ]  \n};\n\nexport default function serviceListReducer(state = initialState, { type, payload }) {\n  switch(type) {\n    case ADD_SERVICE:\n      const { name, price } = payload;\n      if (!state.selected) {\n        return {\n          ...state,\n          services: [...state.services, { id: nanoid(), name, price: +price }]\n        };\n      }\n\n      return {\n        ...state,\n        selected: null,\n        services: state.services.map((s) => s.id === state.selected ? {...s, name, price: +price} : {...s}),\n      };\n\n    case REMOVE_SERVICE:\n      return {\n        ...state, \n        selected: payload.id === state.selected ? null : state.selected,\n        services: state.services.filter((service) => service.id !== payload.id),\n      };\n\n    case EDIT_SERVICE: \n      return {...state, selected: payload.id};\n\n    case CANCEL_EDIT: \n      return {...state, selected: null};\n\n    default:\n      return state;\n  }\n}","import { createStore, combineReducers } from 'redux';\n\nimport serviceAddReducer from '../reducers/serviceAddReducer';\nimport serviceListReducer from '../reducers/serviceListReducer';\n\nconst reducer = combineReducers({\n  serviceAdd: serviceAddReducer,\n  serviceList: serviceListReducer,\n});\n\nconst store = createStore(reducer);\n\nexport default store;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}